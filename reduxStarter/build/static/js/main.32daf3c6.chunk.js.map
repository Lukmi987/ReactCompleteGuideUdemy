{"version":3,"sources":["app/users/reducers/userList.js","app/auth/reducers/auth.js","rootReducer.js","app/users/reducers/userForm.js","constants/actionTypes.js","app/users/reducers/selectedUser.js","app/_common/modals/reducers/userModalStatus.js","app/counter/reducers/counter.js","app/ybusLocations/reducers/locations.js","selectors/counterSelectors.js","app/counter/sagas/changeCounter.js","constants/keys.js","app/counter/sagas/testEffect.js","app/counter/sagas/index.js","selectors/authSelectors.js","app/users/sagas/processUserForm.js","helpers/userHelpers.js","app/users/sagas/fetchUserList.js","selectors/usersSelectors.js","app/users/sagas/removeUser.js","app/users/sagas/editUser.js","app/users/sagas/index.js","app/auth/sagas/loginUser.js","app/auth/sagas/logOut.js","app/auth/sagas/index.js","helpers/locationsHelpers.js","app/ybusLocations/sagas/fetchLocations.js","app/ybusLocations/sagas/index.js","rootSaga.js","configureStore.js","app/counter/actions/index.js","app/_common/components/CounterControl.js","app/_common/components/CounterOutput.js","app/counter/components/useCounter.js","app/counter/components/Counter.js","app/counter/containers/Counter.js","app/users/actions/index.js","app/users/components/UserForm.js","app/users/containers/UserForm.js","app/_common/modals/actions/index.js","app/_common/modals/components/UserModal.js","selectors/modalSelectors.js","app/_common/modals/containers/UserModal.js","app/users/components/UserList.js","app/users/containers/UserList.js","app/auth/actions/index.js","app/auth/components/AuthForm.js","app/auth/containers/AuthForm.js","selectors/locationsSelector.js","app/ybusLocations/components/Locations.js","app/ybusLocations/containers/Locations.js","app/ybusLocations/actions/index.js","App.js","registerServiceWorker.js","index.js"],"names":["initialState","idToken","users","combineReducers","userForm","state","action","type","counterFormData","userList","selectedUser","user","modals","userModalStatus","status","authentication","userAuthInfo","loginAuthInfo","rootReducer","counter","locations","getCounter","createSelector","getCounterForm","counterForm","changeCounter","operationType","select","currentCounter","result","put","testEffect","console","log","counterSagas","takeLatest","getUserAuthInfo","processUserForm","preparedData","version","axios","post","response","loadUserData","entry","composedEntry","id","fname","lname","push","fetchUserList","get","responseData","data","entries","Object","reduce","getUsers","getUserList","getSelectedUser","removeUser","userId","delete","editUser","loginUser","email","pwd","isSignup","password","returnSecureToken","url","localId","localStorage","setItem","logOut","res","updateUserAuthInfo","removeItem","prepareLocations","map","location","country","code","cities","composeCitiesToString","join","city","name","fetchLocations","preparedLocations","rootSaga","all","usersSagas","authSagas","locationsSagas","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","counterControl","props","className","onClick","clicked","label","counterOutput","value","useCounter","dispatch","useDispatch","useSelector","incrementCounter","decrementCounter","addCounter","subtractCounter","Counter","useEffect","mapDispatchToProps","connect","UserForm","useState","setFname","setLname","validated","setValidated","handleInputChange","e","target","composeFormData","Form","noValidate","onSubmit","preventDefault","stopPropagation","currentTarget","checkValidity","Group","controlId","Label","Control","required","onChange","placeholder","Button","variant","formData","setUserModalStatus","UserModal","disabled","setDisabled","setfname","setlname","handleChange","event","oldValue","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Title","Body","defaultValue","Footer","editedUser","getModals","getUserModalStatus","UserList","setSelectedUser","useQuery","fetch","then","json","isLoading","error","edited","setEdited","Table","striped","bordered","hover","key","handleEditUser","AuthForm","processLoginForm","setEmail","setPwd","setIsSignup","Text","getLocations","Locations","App","logUserOut","tokenLocalStorage","getItem","initialIsOpen","Tabs","defaultActiveKey","Tab","eventKey","title","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.32daf3c6.chunk.js","sourcesContent":["import { STORE_USER_LIST} from \"../../../constants/actionTypes\";\n\nconst initialState = [];\n\nexport default (state = initialState, action) => (\n    action.type === STORE_USER_LIST ? action.userList : state\n);\n\n","import {SET_AUTH_INFO, UNSET_LOGGED_USER } from \"../../../constants/actionTypes\";\n\nconst initialState = {idToken: null}\n\nexport default (state = initialState, action) => (\n    action.type === SET_AUTH_INFO ? action.loginAuthInfo : state\n);\n\n\n//They are not allowed to modify the existing state. Instead, they must make immutable updates, by copying the existing state and making changes to the copied values.\n//kazdy reducer je property ve storu,\n//co kdyz chci delat vice akci s jednou property ve storu ? pro kazdou akci budu delat nov\n// export const unsetAuthInfo =  (state = null,) => (\n//     action.type === 'UNSET_LOGGED_USER' ? action.loginAuthInfo : state\n// );\n\n// A \"side effect\" is any change to state or behavior that can be seen outside of returning a value from a function. Some common kinds of side effects are things like:\n//\n//     Logging a value to the console\n// Saving a file\n// Setting an async timer\n// Making an AJAX HTTP request\n// Modifying some state that exists outside of a function, or mutating arguments to a function\n","import { combineReducers } from 'redux';\n\nimport counter from './app/counter/reducers/counter';\nimport userForm from './app/users/reducers/userForm';\nimport userList from \"./app/users/reducers/userList\";\nimport userModalStatus from \"./app/_common/modals/reducers/userModalStatus\";\nimport selectedUser from \"./app/users/reducers/selectedUser\";\nimport locations from \"./app/ybusLocations/reducers/locations\";\nimport userAuthInfo from \"./app/auth/reducers/auth\";\n\n\n//define how the store is going to look like\n\nconst users = combineReducers({\n    userForm,\n    userList,\n    selectedUser,\n});\n\nconst modals = combineReducers({\n    userModalStatus,\n});\n\nconst authentication = combineReducers({\n    userAuthInfo,\n})\n\n\nconst rootReducer = combineReducers({\n  counter,\n  users,\n  modals,\n  locations,\n  authentication,\n});\n\nexport default rootReducer;\n","import {STORE_USER_FORM} from \"../../../constants/actionTypes\";\n\nconst initialState = null;\n\nexport default (state = initialState, action) => (\n    action.type === STORE_USER_FORM ? action.counterFormData : state\n);\n\n","//counter action\nexport const CHANGE_COUNTER = 'CHANGE_COUNTER';\nexport const SET_COUNTER = 'SET_COUNTER';\nexport const TEST_EFFECT = 'TEST_EFFECT';\n\n//user actions\nexport const PROCESS_USER_FORM = 'PROCESS_USER_FORM';\nexport const STORE_USER_FORM = 'STORE_USER_FORM';\nexport const FETCH_USER_LIST = 'FETCH_USER_LIST';\nexport const STORE_USER_LIST = 'STORE_USER_LIST';\nexport const REMOVE_USER = 'REMOVE_USER';\nexport const EDIT_USER = 'EDIT_USER';\nexport const SET_USER_MODAL_STATUS = 'SET_USER_MODAL_STATUS';\nexport const SET_SELECTED_USER = 'SET_SELECTED_USER';\nexport const LOGIN_USER = 'LOGIN_USER';\n\n//locations\nexport const FETCH_LOCATIONS =  'FETCH_LOCATIONS';\nexport const SET_LOCATIONS = 'SET_LOCATIONS';\n\n//authentication\nexport const SET_AUTH_INFO = 'SET_AUTH_INFO';\nexport const LOG_USER_OUT = 'LOG_USER_OUT';\nexport const UNSET_LOGGED_USER = 'UNSET_LOGGED_USER';","import { SET_SELECTED_USER } from \"../../../constants/actionTypes\";\n\nconst initialState = null;\n\nexport default (state = initialState, action) => (\n    action.type === SET_SELECTED_USER ? action.user : state\n);\n\n","import {SET_USER_MODAL_STATUS} from \"../../../../constants/actionTypes\";\n\nconst initialState = false;\n\nexport default (state = initialState, action) => (\n    action.type === SET_USER_MODAL_STATUS ? action.status : state\n);","import {SET_COUNTER} from \"../../../constants/actionTypes\";\n\nconst initialState = 0;\n\nexport default (state = initialState, action) => (\n  action.type === SET_COUNTER ? action.counter : state\n);\n","import { SET_LOCATIONS } from \"../../../constants/actionTypes\";\n\nconst initialState = null;\n\nexport default (state = initialState, action) => (\n    action.type === SET_LOCATIONS ? action.locations : state\n);\n\n","import { createSelector } from 'reselect';\n\nexport const getCounter = createSelector(\n  (state) => state,\n  (state) => state.counter,\n);\n\nexport const getCounterForm = createSelector(\n    (state) => state,\n    (state) => state.counterForm,\n);\n\n\n\n","import { put, select } from 'redux-saga/effects';\nimport {getCounter} from \"../../../selectors/counterSelectors\";\nimport {ADD, DECREMENT, INCREMENT, SUBTRACT} from \"../../../constants/keys\";\nimport {SET_COUNTER} from \"../../../constants/actionTypes\";\n\n\nexport function* changeCounter(action) {\n  const operationType = action.operationType;\n  const currentCounter = yield select(getCounter);\n  let result;\n\n    if(action.operationType === INCREMENT) {\n      result = currentCounter + 1;\n    }\n    if(action.operationType === DECREMENT) {\n      result = currentCounter - 1;\n    }\n    if(action.operationType === ADD) {\n      result = currentCounter + 5;\n    }\n    if(action.operationType === SUBTRACT) {\n      result = currentCounter - 5;\n    }\n\n    yield put({ type: SET_COUNTER, counter: result });\n\n  // second call  yield changeTest();\n}\n\n// export function* changeTest(action) {\n//   const operationType = action.operationType;\n//   const currentCounter = yield select(getCounter);\n//   let result;\n//\n//     if(action.operationType === INCREMENT) {\n//       result = currentCounter + 1;\n//     }\n//     if(action.operationType === DECREMENT) {\n//       result = currentCounter - 1;\n//     }\n//     if(action.operationType === ADD) {\n//       result = currentCounter + 5;\n//     }\n//     if(action.operationType === SUBTRACT) {\n//       result = currentCounter - 5;\n//     }\n//\n//     yield put({ type: SET_COUNTER, counter: result });\n// }\n","export const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const ADD = 'ADD';\nexport const SUBTRACT = 'SUBTRACT';\n","import { put, select } from 'redux-saga/effects';\n\nexport function* testEffect() {\n  console.log('test effect saga');\n}\n","import { takeLatest } from 'redux-saga/effects';\nimport { changeCounter } from './changeCounter';\nimport { testEffect } from './testEffect';\nimport {CHANGE_COUNTER, TEST_EFFECT} from \"../../../constants/actionTypes\";\n\n//listen for CHANGE_COUNTER\nconst counterSagas = [\n  takeLatest(CHANGE_COUNTER, changeCounter),\n  takeLatest(TEST_EFFECT, testEffect),\n];\n\nexport default counterSagas;\n","import { createSelector } from 'reselect';\n\nexport const getUserAuthInfo = createSelector(\n  (state) => state,\n  (state) => state.authentication.userAuthInfo,\n);\n\n\n\n\n","import { put,select } from 'redux-saga/effects';\nimport {FETCH_USER_LIST, STORE_USER_FORM} from \"../../../constants/actionTypes\";\nimport { getUserAuthInfo } from \"../../../selectors/authSelectors\";\nimport axios from 'axios';\n\nexport function* processUserForm(action) {\n    const counterFormData = action.counterFormData;\n    const preparedData = { ...counterFormData, version: 'verze 0'};\n\n    try {\n        const userAuthInfo = yield select(getUserAuthInfo);\n        const response = yield axios.post('https://react-hooks-update-4307d.firebaseio.com/ingredients.json?auth=' + userAuthInfo.idToken, preparedData);\n        console.log(response);\n        yield put({ type: STORE_USER_FORM, counterFormData: preparedData });\n        yield put({type: FETCH_USER_LIST});\n    } catch(e){\n        console.log(e);\n    }\n}\n","\nexport const loadUserData = (result, entry) => {\n    const composedEntry = {\n        id:entry[0],\n        fname: entry[1].fname,\n        lname: entry[1].lname\n    };\n    result.push(composedEntry);\n    return result;\n};\n\nexport  const deleteUser = (userId, userList) => userList.filter(user => user.id !== userId);","import { put,select } from 'redux-saga/effects';\nimport { STORE_USER_LIST } from \"../../../constants/actionTypes\";\nimport { getUserAuthInfo } from \"../../../selectors/authSelectors\";\nimport axios from 'axios';\nimport {loadUserData} from \"../../../helpers/userHelpers\";\n\nexport function* fetchUserList() {\n\n    try {\n        const userAuthInfo = yield select(getUserAuthInfo);\n        const response = yield axios.get('https://react-hooks-update-4307d.firebaseio.com/ingredients.json?auth=' + userAuthInfo.idToken);\n        const responseData = response.data;\n        if(responseData) {\n            const entries = Object.entries(responseData);\n            const users = entries.reduce(loadUserData, []);\n            yield put({type: STORE_USER_LIST, userList: users});\n        }\n    } catch (e) {\n        console.log(e)\n    }\n}\n","import { createSelector } from 'reselect';\n\nexport const getUsers = createSelector(\n    (state) => state,\n    (state) => state.users,\n);\n\nexport const getUserForm = createSelector(\n    getUsers,\n    (users) => users.userForm,\n);\n\nexport const getUserList = createSelector(\n    getUsers,\n    (users) => users.userList,\n);\n\nexport const getSelectedUser = createSelector(\n     getUsers,\n    (users) => users.selectedUser,\n);\n\n\n","import { put, select } from 'redux-saga/effects';\nimport {FETCH_USER_LIST, STORE_USER_LIST} from \"../../../constants/actionTypes\";\nimport axios from 'axios';\nimport {deleteUser} from \"../../../helpers/userHelpers\";\nimport {getUserList} from \"../../../selectors/usersSelectors\";\nimport { getUserAuthInfo } from \"../../../selectors/authSelectors\";\nimport {fetchUserList} from \"./fetchUserList\";\n\nexport function* removeUser(action) {\n    const {userId} = action;\n    try {\n        const userAuthInfo = yield select(getUserAuthInfo);\n         const response = yield axios.delete(`https://react-hooks-update-4307d.firebaseio.com/ingredients/${userId}.json?auth=` + userAuthInfo.idToken);\n         yield put({type: FETCH_USER_LIST});\n         // const state =  yield select();\n         //shallow copy not good, deep copy better\n         //const userList = {...state.userList};\n         //const updatedUserList= deleteUser(userId,state.userList);\n    } catch (e) {\n        console.log(e)\n    }\n}\n","import { put, select } from 'redux-saga/effects';\nimport {FETCH_USER_LIST, STORE_USER_LIST} from \"../../../constants/actionTypes\";\nimport { getUserAuthInfo } from \"../../../selectors/authSelectors\";\nimport axios from 'axios';\nimport {deleteUser} from \"../../../helpers/userHelpers\";\nimport {getUserList} from \"../../../selectors/usersSelectors\";\n\nexport function* editUser(action) {\n    const {id, fname, lname} = action.user;\n\n    const preparedData = {fname, lname };\n    console.log('v edit user saga', action);\n    try {\n          const userAuthInfo = yield select(getUserAuthInfo);\n          const response = yield axios.put(`https://react-hooks-update-4307d.firebaseio.com/ingredients/${id}.json?auth=` + userAuthInfo.idToken, preparedData);\n          yield put({type: FETCH_USER_LIST });\n    } catch (e) {\n        console.log(e)\n    }\n}\n\n// function updateUser(userId, userList, fname, lname) {\n//   const copyOfUserList = [...userList];\n//\n//   //console.log(copyOfUserList);\n//   const index = copyOfUserList.findIndex(user => user.id === userId);\n//   copyOfUserList[0].fname = fname;\n//   copyOfUserList[0].lname = lname;\n//\n//   return copyOfUserList;\n// }\n","import { takeLatest } from 'redux-saga/effects';\nimport { processUserForm } from './processUserForm';\nimport {FETCH_USER_LIST, PROCESS_USER_FORM, REMOVE_USER, EDIT_USER } from \"../../../constants/actionTypes\";\nimport {fetchUserList} from \"./fetchUserList\";\nimport { removeUser } from \"./removeUser\";\nimport { editUser } from \"./editUser\";\n\n\n//listen for CHANGE_COUNTER\nconst counterSagas = [\n  takeLatest(PROCESS_USER_FORM, processUserForm),\n  takeLatest(FETCH_USER_LIST, fetchUserList),\n  takeLatest(REMOVE_USER, removeUser),\n  takeLatest(EDIT_USER, editUser),\n];\n\nexport default counterSagas;\n","import { put, select } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {SET_AUTH_INFO} from \"../../../constants/actionTypes\";\n\nexport function* loginUser(action) {\n    const { email, pwd, isSignup } = action.user;\n    const preparedData = {email, password: pwd, returnSecureToken: true };\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDHgyJbZWnZHfyECzhyd8ncmPNWevtSDJg';\n    \n    if (!isSignup) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDHgyJbZWnZHfyECzhyd8ncmPNWevtSDJg';\n    }\n    try {\n          const response = yield axios.post(url,preparedData);\n          const loginAuthInfo = {idToken: response.data.idToken, userId: response.data.localId };\n          //new Date without args give us current date,\n          localStorage.setItem('token', response.data.idToken);\n          yield put({type: SET_AUTH_INFO, loginAuthInfo});\n          //yield put({type: });\n      } catch (e) {\n        console.log(e);\n       // yield put({type: SET_AUTH_INFO, errorObject});\n    }\n}\n\n","import { put, select } from 'redux-saga/effects';\nimport { getUserAuthInfo } from \"../../../selectors/authSelectors\";\nimport {SET_AUTH_INFO} from \"../../../constants/actionTypes\";\n\nexport function* logOut() {\n    const res =yield select(getUserAuthInfo);\n    const updateUserAuthInfo = {...res}\n    localStorage.removeItem('token');\n    updateUserAuthInfo.idToken = null;\n    updateUserAuthInfo.userId = null;\n    yield put({type: SET_AUTH_INFO, loginAuthInfo: updateUserAuthInfo });\n}\n\n","import { takeLatest } from 'redux-saga/effects';\nimport { loginUser } from \"./loginUser\";\nimport { logOut } from \"./logOut\";\nimport {LOG_USER_OUT, LOGIN_USER} from \"../../../constants/actionTypes\";\n\n//listen for CHANGE_COUNTER\nconst counterSagas = [\n  takeLatest(LOGIN_USER, loginUser),\n  takeLatest(LOG_USER_OUT, logOut),\n];\n\nexport default counterSagas;\n","export const prepareLocations = (locations) => {\n    return locations.map(location => ({\n      country: location.country,\n      code: location.code,\n      cities: composeCitiesToString(location.cities).join(),\n  }));\n}\n\n//I can use reduce method\nconst composeCitiesToString = (cities) => {\n    return cities.map(city =>  city.name );\n};\n","import { put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {prepareLocations} from \"../../../helpers/locationsHelpers\";\nimport {SET_LOCATIONS} from \"../../../constants/actionTypes\";\n\nexport function* fetchLocations() {\n    try {\n          const response = yield axios.get('https://dpl-qa-ybus-pubapi.sa.cz/restapi/consts/locations');\n          const locations = response.data;\n          const preparedLocations = prepareLocations(locations);\n          yield put({type: SET_LOCATIONS, locations: preparedLocations });\n        console.log('.........preparedLocations', preparedLocations);\n    } catch (e) {\n        console.log(e);\n    }\n}\n\n","import { takeLatest } from 'redux-saga/effects';\nimport { fetchLocations } from \"./fetchLocations\";\nimport {FETCH_LOCATIONS} from \"../../../constants/actionTypes\";\n\nconst counterSagas = [\n  takeLatest(FETCH_LOCATIONS, fetchLocations),\n];\n\nexport default counterSagas;\n","import { all } from 'redux-saga/effects';\nimport counterSagas from \"./app/counter/sagas\";\nimport usersSagas from \"./app/users/sagas\";\nimport authSagas from \"./app/auth/sagas\";\nimport locationsSagas from \"./app/ybusLocations/sagas\"\n\nexport default function* rootSaga() {\n  yield all([\n    ...counterSagas,\n    ...usersSagas,\n    ...authSagas,\n    ...locationsSagas,\n  ]);\n}\n","import 'regenerator-runtime/runtime';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\n//dev tool from redux\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  {},\n  composeEnhancers(applyMiddleware(...middlewares)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import {CHANGE_COUNTER, TEST_EFFECT} from '../../../constants/actionTypes'\n\nexport const changeCounter = (operationType) => ({\n  type: CHANGE_COUNTER,\n  operationType: operationType,\n});\n\nexport const testEffect = () => ({\n  type: TEST_EFFECT,\n});\n\n\n\n","import React from 'react';\n\nimport './CounterControl.css';\n\nconst counterControl = (props) => (\n    <div className=\"CounterControl\" onClick={props.clicked}>\n        {props.label}\n    </div>\n);\n\nexport default counterControl;","import React from 'react';\n\nimport './CounterOutput.css';\n\nconst counterOutput = (props) => (\n    <div className=\"CounterOutput\">\n        Current Counter: {props.value}\n    </div>\n);\n\nexport default counterOutput;","import {useDispatch, useSelector} from \"react-redux\";\nimport {changeCounter} from \"../actions\";\nimport {ADD, DECREMENT, INCREMENT, SUBTRACT} from \"../../../constants/keys\";\n\nconst useCounter = () => {\n    const dispatch = useDispatch()\n    const counter = useSelector(state => state.counter)\n\n    return {\n        counter,\n        incrementCounter: () => dispatch(changeCounter(INCREMENT)),\n        decrementCounter: () =>dispatch(changeCounter(DECREMENT)),\n        addCounter: () =>dispatch(changeCounter(ADD)),\n        subtractCounter: () =>dispatch(changeCounter(SUBTRACT))\n    }\n};\n\nexport default useCounter","import React, { useEffect, useState } from 'react';\nimport CounterControl from '../../_common/components/CounterControl';\nimport CounterOutput from '../../_common/components/CounterOutput';\nimport { INCREMENT, DECREMENT, ADD, SUBTRACT } from '../../../constants/keys';\nimport useCounter from \"./useCounter\";\n\nconst Counter = ({testEffect }) => {\n  const {addCounter, counter, decrementCounter, incrementCounter, subtractCounter} = useCounter()\n\n  // const [counter1, setCounter1] = useState(0);\n  // console.log(counter1);\n\n  useEffect(() => {\n    testEffect();\n  },[]);\n\n  return (\n      <div>\n          <CounterOutput value={counter} />\n          <CounterControl label={INCREMENT} clicked={() => {\n              incrementCounter()\n          }} />\n        <CounterControl label={DECREMENT} clicked={() => {\n              decrementCounter()\n          }} />\n        <CounterControl label={ADD} clicked={() => {\n              addCounter()\n          }} />\n        <CounterControl label={SUBTRACT} clicked={() => {\n              subtractCounter()\n          }} />\n          <hr />\n      </div>\n  );\n}\n\nexport default Counter;\n","import { connect } from 'react-redux';\nimport { changeCounter, testEffect } from '../actions';\nimport { getCounter} from '../../../selectors/counterSelectors';\nimport Counter from '../components/Counter';\n\nconst mapStateToProps = state => ({\n    counter: getCounter(state),\n});\n\n//my redux actions\nconst mapDispatchToProps = {\n  changeCounter,\n  testEffect,\n};\n //if we have a container which only needs to dispatch actions but doesn't need the slice of the state we pass null as first arg to connect\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n","import {\n  PROCESS_USER_FORM,\n  FETCH_USER_LIST,\n  REMOVE_USER,\n  EDIT_USER,\n  SET_SELECTED_USER\n} from '../../../constants/actionTypes'\n\nexport const processUserForm = (formData) => ({\n  type: PROCESS_USER_FORM,\n  counterFormData: formData,\n});\n\nexport const fetchUserList = () => ({\n  type: FETCH_USER_LIST,\n});\n\nexport const removeUser = (userId) => ({\n  type: REMOVE_USER,\n  userId: userId,\n});\n\nexport const editUser = (user) => ({\n  type: EDIT_USER,\n  user,\n});\n\nexport const setSelectedUser = (user) => ({\n  type: SET_SELECTED_USER,\n  user,\n});\n\n\n\n\n\n","import React, {useCallback, useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst UserForm = ({ processUserForm }) => {\n    const [fname, setFname] = useState('');\n    const [lname, setLname] = useState('');\n    const [validated, setValidated] = useState(false);\n\n    useEffect(()=>{\n        console.log()\n    });\n\n    const handleInputChange = (e) =>{\n        const id = e.target.id;\n        const value = e.target.value;\n\n        if(id === 'fname') setFname(value);\n        if(id === 'lname') setLname(value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const form = e.currentTarget;\n            if (form.checkValidity() === false){\n                console.log('v ifu');\n                setValidated(true);\n                return;\n            }\n        //form has been validated\n        setValidated(true);\n        processUserForm(composeFormData());\n    }\n\n    const composeFormData = () => ({\n        fname,\n        lname,\n    });\n\n    return (\n        <Form\n            noValidate\n            validated= {validated}\n            onSubmit={handleSubmit}\n            >\n\n            <Form.Group controlId=\"fname\">\n                <Form.Label>First name:</Form.Label>\n                <Form.Control required  onChange={handleInputChange} value={fname}  type=\"text\" placeholder=\"first name\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"lname\">\n                <Form.Label>Last Name: </Form.Label>\n                <Form.Control required onChange={handleInputChange} value={lname} type=\"text\" placeholder=\"Last Name\" />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n                Submit\n            </Button>\n            {`${fname} ${lname}`}<br/>\n        </Form>\n    )\n}\n\nexport default UserForm;\n","import { connect } from 'react-redux';\nimport { getCounterForm } from '../../../selectors/counterSelectors';\nimport { processUserForm } from '../actions';\nimport UserForm from \"../components/UserForm\";\n\nconst mapStateToProps = state => ({\n    counterForm: getCounterForm(state)\n});\n\nconst mapDispatchToProps = {\n    processUserForm,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);","import {SET_USER_MODAL_STATUS} from \"../../../../constants/actionTypes\";\n\n\nexport const setUserModalStatus = (status) => ({\n    type: SET_USER_MODAL_STATUS,\n    status,\n});\n\n\n","import React, { useEffect, useState } from 'react';\nimport Button from  'react-bootstrap/Button';\nimport Modal from  'react-bootstrap/Modal';\nimport {setUserModalStatus} from \"../actions\";\n\nconst UserModal = ({ status, setUserModalStatus, selectedUser, editUser }) => {\n  const [disabled, setDisabled] = useState(\"disabled\");\n  // useState is not rerendr. , calls all except useState\n  const [fname, setfname] = useState(selectedUser.fname);\n  const [lname, setlname] = useState(selectedUser.lname);\n\n  // useEffect(()=>{\n  //    // if(selectedUser){\n  //    //     setfname(selectedUser.fname);\n  //    //     setlname(selectedUser.lname);\n  //    // }\n  // } ,[selectedUser])\n\n  const handleChange = (event) => {\n    const id = event.target.id;\n    const value = event.target.value;\n    const oldValue = selectedUser[id];\n\n    (id === 'fname') ? setfname(value) : setlname(value)\n    setDisabled(oldValue !== value ? null : \"disabled\");\n  }\n\n  const handleSubmit = () => {\n    const userId = selectedUser.id;\n      if(selectedUser.fname !== fname || selectedUser.lname !== lname){\n          const editedUser = {id: selectedUser.id, fname, lname};\n          editUser(editedUser);\n      }\n  }\n  return (\n      selectedUser && (\n      <Modal\n          show={status}\n          onHide={() => setUserModalStatus(false)}\n          backdrop=\"static\"\n          keyboard={false}\n      >\n          <Modal.Header closeButton>\n              <Modal.Title>Modal title</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n              <input defaultValue={selectedUser.fname}\n                     id='fname'\n                     onChange={handleChange} />\n              <input defaultValue={selectedUser.lname}\n                     id='lname'\n                     onChange={handleChange} />\n          </Modal.Body>\n          <Modal.Footer>\n              <Button variant=\"secondary\" onClick={() => setUserModalStatus(false)}>\n                  Close\n              </Button>\n              <Button variant=\"primary\"\n                      disabled={disabled}\n                      onClick={handleSubmit}>Confirm</Button>\n          </Modal.Footer>\n      </Modal> )\n  )\n};\n\nexport default UserModal;\n","import {createSelector} from \"reselect\";\n\nexport const getModals = createSelector(\n    (state) => state,\n    (state) => state.modals,\n);\n\nexport const getUserModalStatus = createSelector(\n    getModals,\n    (modals) => modals.userModalStatus,\n);","import { connect } from 'react-redux';\nimport { setUserModalStatus } from '../actions';\nimport UserModal from \"../components/UserModal\";\nimport {getUserModalStatus} from \"../../../../selectors/modalSelectors\";\nimport {getSelectedUser} from \"../../../../selectors/usersSelectors\";\nimport {editUser} from \"../../../users/actions\";\n\nconst mapStateToProps = state => ({\n    status: getUserModalStatus(state),\n    selectedUser: getSelectedUser(state),\n});\n\nconst mapDispatchToProps = {\n    setUserModalStatus,\n    editUser\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserModal);\n","import React, { useEffect, useState } from 'react';\nimport Table from  'react-bootstrap/Table';\nimport Button from  'react-bootstrap/Button';\nimport UserModal from \"../../_common/modals/containers/UserModal\";\nimport {useQuery} from \"react-query\";\n\nconst UserList = ({userList, fetchUserList, removeUser, setUserModalStatus, setSelectedUser, userAuthInfo}) => {\n\n    const { isLoading, error, data } = useQuery(\"repoData\", () =>\n        fetch(\n            \"https://api.github.com/repos/tannerlinsley/react-query\"\n        ).then((res) => res.json())\n    );\n\n    useEffect(() => {\n   console.log('...........userID token authe', userAuthInfo.idToken);\n   if(userAuthInfo.idToken) fetchUserList();\n}, [userAuthInfo.idToken]);\n\n const [edited, setEdited] = useState(false);\n\n const handleEditUser = (user) => {\n    setEdited(true);\n    setUserModalStatus(true);\n    setSelectedUser(user);\n}\n\n return (\n     <>\n        <Table striped bordered hover>\n            <thead>\n            <tr>\n                <th>{data?.name}</th>\n                <th>Last Name</th>\n            </tr>\n            </thead>\n            <tbody>\n            {userList.map(user => (\n                <tr key={user.id}>\n                    <td>{user.fname}</td>\n                    <td>{user.lname}</td>\n                    <td>\n                      <Button onClick={() => handleEditUser(user) } variant='warning'>Edit\n                      </Button>\n                    </td>\n                    <td><Button onClick={() => {removeUser(user.id)}} variant='danger'>Delete</Button></td>\n                </tr>\n                )\n            )}\n            </tbody>\n        </Table>\n         { edited && <UserModal /> }\n     </>\n\n    )\n }\n\nexport default UserList;\n\n// rendrovani user Listu pri zmene\n//\n","import { connect } from 'react-redux';\nimport { getUserList } from '../../../selectors/usersSelectors';\nimport { getUserAuthInfo } from \"../../../selectors/authSelectors\";\nimport {fetchUserList, removeUser, editUser, setSelectedUser } from '../actions';\nimport {setUserModalStatus} from \"../../_common/modals/actions\";\nimport UserList from \"../components/UserList\";\n\nconst mapStateToProps = state => ({\n    userList: getUserList(state),\n    userAuthInfo: getUserAuthInfo(state),\n});\n\nconst mapDispatchToProps = {\n    fetchUserList,\n    removeUser,\n    editUser,\n    setUserModalStatus,\n    setSelectedUser\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);\n","import {\n  LOG_USER_OUT,\n  LOGIN_USER\n} from '../../../constants/actionTypes'\n\nexport const processLoginForm = (user) => ({\n  type: LOGIN_USER,\n  user,\n});\n\nexport const logOut = () => ({\n  type: LOG_USER_OUT\n});\n\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst AuthForm = ({ processLoginForm,  logOut }) => {\n    const [email, setEmail] = useState('');\n    const [pwd, setPwd] = useState('');\n    const [validated, setValidated] = useState(false);\n    const [isSignup, setIsSignup] = useState(true);\n\n    // console.log('.........',expiresToken);\n    // useEffect((expiration)=> {\n    //     console.log('......... v useeffect');\n    //         setTimeout(() => {\n    //            // logOut\n    //         }, expiration * 1000);\n    // },[expiresToken]);\n\n    // checkAuthTimeout = (expirationTime) => () => {\n    //     setTimeout(() => {\n    //         //after expiration i call log out action logout()\n    //     }, expirationTime * 1000);\n    // }\n    //\n    // export const logout = () {\n    //     //call authLogout()\n    //     //where i updateObject (state, {token: null, userId: null})\n    // }\n\n    const handleInputChange = (e) =>{\n        const id = e.target.id;\n        const value = e.target.value;\n        if(id === 'email') setEmail(value);\n        if(id === 'pwd') setPwd(value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const form = e.currentTarget;\n            if (form.checkValidity() === false){\n                setValidated(true);\n                return;\n            }\n        //form has been validated\n        setValidated(true);\n        processLoginForm(composeFormData());\n    }\n\n    const composeFormData = () => ({\n        email,\n        pwd,\n        isSignup,\n    });\n\n    const switchAuthModeHandler = () => isSignup ? setIsSignup(false) : setIsSignup(true);\n\n\n    return (\n      <>\n        <Form\n            noValidate\n            validated= {validated}\n            onSubmit={handleSubmit}\n            >\n            <Form.Group controlId=\"email\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={handleInputChange} value={email} />\n                <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"pwd\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleInputChange} value={pwd} />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n                Submit\n            </Button>\n            <br/>\n        </Form>\n        <Button onClick={switchAuthModeHandler}\n                variant='danger'>\n            Switch to {isSignup ? 'SIGNIN' : 'SIGNUP'}\n        </Button>\n          <div>\n          <Button onClick={logOut} variant=\"primary\" >\n           LogOut\n          </Button>\n          </div>\n        </>\n    )\n}\n\nexport default AuthForm;\n","import { connect } from 'react-redux';\nimport { getExpireTime } from '../../../selectors/counterSelectors';\nimport {logOut, processLoginForm} from '../actions';\nimport AuthForm from \"../components/AuthForm\";\n\nconst mapStateToProps = state => ({\n   // expiresToken: getExpireTime(state)\n});\n\nconst mapDispatchToProps = {\n    processLoginForm,\n    logOut\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);","import { createSelector } from 'reselect';\n\nexport const getLocations = createSelector(\n  (state) => state,\n  (state) => state.locations,\n);\n\n\n","import React, { useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\n\nconst Locations = ({ locations, fetchLocations }) => {\n    useEffect(()=>{\n        fetchLocations();\n    },[]);\n\n    return (\n        locations && (\n        <Table striped bordered hover>\n            <thead>\n            <tr>\n                <th>Country</th>\n                <th>Code</th>\n                <th>Cities</th>\n            </tr>\n            </thead>\n            <tbody>\n            {locations.map( location => (\n                <tr key={location.code}>\n                    <td>{location.country}</td>\n                    <td>{location.code}</td>\n                    <td>{location.cities}</td>\n                </tr>\n                )\n             )\n            }\n            </tbody>\n        </Table>\n        )\n    )\n}\n\nexport default Locations;\n","import { connect } from 'react-redux';\nimport {getLocations} from \"../../../selectors/locationsSelector\";\nimport { fetchLocations } from '../actions';\nimport Locations from \"../components/Locations\";\n\n\nconst mapStateToProps = state => ({\n    locations: getLocations(state)\n});\n\nconst mapDispatchToProps = {\n    fetchLocations,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations);","import {\n  FETCH_LOCATIONS\n} from '../../../constants/actionTypes'\n\nexport const fetchLocations = () => ({\n  type: FETCH_LOCATIONS,\n});\n\n\n\n\n\n\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector } from \"react-redux\";\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Counter from './app/counter/containers//Counter';\nimport UserForm from \"./app/users/containers/UserForm\";\nimport UserList from './app/users/containers/UserList';\nimport AuthForm from \"./app/auth/containers/AuthForm\";\nimport Locations from \"./app/ybusLocations/containers/Locations\";\nimport store from './configureStore';\nimport {logOut} from \"./app/auth/actions\";\nimport { ReactQueryDevtools } from 'react-query-devtools'\nimport './App.css';\n\nconst App = () =>  {\n  const dispatch = useDispatch();\n  const logUserOut = () => dispatch(logOut());\n  const test = () => console.log('click in app');\n\nconst idToken = useSelector(state => state.authentication.userAuthInfo.idToken);\n    const tokenLocalStorage = localStorage.getItem('token')\n  useEffect(()=>{\n    console.log('hello from app in use effect',tokenLocalStorage);\n  },[idToken,logUserOut])\n\n\n    return(\n\n        <div className=\"App\">\n            <ReactQueryDevtools initialIsOpen />\n            <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"home\" title=\"Home\">\n                    <Counter />\n                </Tab>\n                <Tab eventKey=\"profile\" title=\"User Form\">\n                   <UserForm />\n                </Tab>\n\n                {idToken && <Tab eventKey=\"contact\" title=\"User List\" >\n                                <UserList />\n                            </Tab>\n                }\n                {!idToken ?\n                    <Tab eventKey=\"authenticate\" title=\"Authenticate\" >\n                    <AuthForm />\n                    </Tab>\n                    :\n                    <Tab  eventKey=\"authenticate\" title=\"Log Out\" >\n                      <button onClick={logUserOut}>LogOut</button>\n                    </Tab>\n                }\n                <Tab eventKey=\"YbusLocations\" title=\"Ybus Locations\" >\n                    <Locations />\n                </Tab>\n            </Tabs>\n        </div>\n  )\n}\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './configureStore';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { ReactQueryDevtools } from 'react-query-devtools'\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}